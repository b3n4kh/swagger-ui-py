name: tests

on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md
      - 'tools/**'
  pull_request:
    paths-ignore:
      - README.md
      - 'tools/**'

jobs:
  lint-and-pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        python-version: ${{ matrix.python-version }}
    - name: Set up Python
      run: uv python install

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: isort
      run: uv run isort --line-width=100 --check-only --force-single-line-imports .

    - name: Lint with ruff
      run: uv run ruff check --output-format=github .

    - name: Run tests and capture output
      run: |
        {
          echo "pytest_output<<EOF"
          uv run pytest -s test/ || true
          echo "EOF"
        } >> $GITHUB_ENV

    - name: Extract and Post Test Summary
      run: |
        echo "### ✅ Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **✅ Passed:** $(echo "$pytest_output" | grep -oP '\d+(?= passed)' || echo 0)" >> $GITHUB_STEP_SUMMARY
        echo "- **❌ Failed:** $(echo "$pytest_output" | grep -oP '\d+(?= failed)' || echo 0)" >> $GITHUB_STEP_SUMMARY
        echo "- **⚠️ Skipped:** $(echo "$pytest_output" | grep -oP '\d+(?= skipped)' || echo 0)" >> $GITHUB_STEP_SUMMARY
        echo "- **🚨 Errors:** $(echo "$pytest_output" | grep -oP '\d+(?= error)' || echo 0)" >> $GITHUB_STEP_SUMMARY
        echo "- **⏱ Duration:** $(echo "$pytest_output" | grep -oP '\d+\.\d+(?= seconds)' || echo 0) seconds" >> $GITHUB_STEP_SUMMARY
